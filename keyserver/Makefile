# Makefile.in generated by automake 1.11.6 from Makefile.am.
# keyserver/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2001, 2002, 2004, 2005, 2006,
#               2007, 2009 Free Software Foundation, Inc.
#
# This file is part of GnuPG.
#
# GnuPG is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# GnuPG is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/gnupg
pkgincludedir = $(includedir)/gnupg
pkglibdir = $(libdir)/gnupg
pkglibexecdir = $(libexecdir)/gnupg
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
EXTRA_PROGRAMS = gpgkeys_ldap$(EXEEXT) gpgkeys_hkp$(EXEEXT) \
	gpgkeys_finger$(EXEEXT) gpgkeys_curl$(EXEEXT)
am__append_1 = curl-shim.c curl-shim.h
am__append_2 = curl-shim.c curl-shim.h
#am__append_3 = ksmalloc.c
#am__append_4 = ksmalloc.c
#am__append_5 = 
subdir = keyserver
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/gpgkeys_mailto.in $(srcdir)/gpgkeys_test.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/autobuild.m4 \
	$(top_srcdir)/m4/codeset.m4 $(top_srcdir)/m4/estream.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/glibc2.m4 \
	$(top_srcdir)/m4/glibc21.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intdiv0.m4 $(top_srcdir)/m4/intl.m4 \
	$(top_srcdir)/m4/intmax.m4 $(top_srcdir)/m4/inttypes-pri.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/isc-posix.m4 \
	$(top_srcdir)/m4/lcmessage.m4 $(top_srcdir)/m4/ldap.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libcurl.m4 \
	$(top_srcdir)/m4/libusb.m4 $(top_srcdir)/m4/lock.m4 \
	$(top_srcdir)/m4/longdouble.m4 $(top_srcdir)/m4/longlong.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/noexecstack.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/printf-posix.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/readline.m4 \
	$(top_srcdir)/m4/size_max.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/tar-ustar.m4 $(top_srcdir)/m4/uintmax_t.m4 \
	$(top_srcdir)/m4/ulonglong.m4 $(top_srcdir)/m4/visibility.m4 \
	$(top_srcdir)/m4/wchar_t.m4 $(top_srcdir)/m4/wint_t.m4 \
	$(top_srcdir)/m4/xsize.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/scripts/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = gpgkeys_mailto gpgkeys_test
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(gpglibexecdir)" \
	"$(DESTDIR)$(gpglibexecdir)"
PROGRAMS = $(gpglibexec_PROGRAMS)
am__gpgkeys_curl_SOURCES_DIST = gpgkeys_curl.c ksutil.c ksutil.h \
	curl-shim.c curl-shim.h ksmalloc.c
am__objects_1 = gpgkeys_curl-curl-shim.$(OBJEXT)
#am__objects_2 = gpgkeys_curl-ksmalloc.$(OBJEXT)
am_gpgkeys_curl_OBJECTS = gpgkeys_curl-gpgkeys_curl.$(OBJEXT) \
	gpgkeys_curl-ksutil.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
gpgkeys_curl_OBJECTS = $(am_gpgkeys_curl_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
#gpgkeys_curl_DEPENDENCIES = ../util/libcompat.a
gpgkeys_curl_DEPENDENCIES = ../util/libutil.a \
	$(am__DEPENDENCIES_2)
am_gpgkeys_finger_OBJECTS = gpgkeys_finger-gpgkeys_finger.$(OBJEXT) \
	gpgkeys_finger-ksutil.$(OBJEXT)
gpgkeys_finger_OBJECTS = $(am_gpgkeys_finger_OBJECTS)
gpgkeys_finger_DEPENDENCIES = ../util/libutil.a $(am__DEPENDENCIES_2)
am__gpgkeys_hkp_SOURCES_DIST = gpgkeys_hkp.c ksutil.c ksutil.h \
	curl-shim.c curl-shim.h ksmalloc.c
am__objects_3 = gpgkeys_hkp-curl-shim.$(OBJEXT)
#am__objects_4 = gpgkeys_hkp-ksmalloc.$(OBJEXT)
am_gpgkeys_hkp_OBJECTS = gpgkeys_hkp-gpgkeys_hkp.$(OBJEXT) \
	gpgkeys_hkp-ksutil.$(OBJEXT) $(am__objects_3) $(am__objects_4)
gpgkeys_hkp_OBJECTS = $(am_gpgkeys_hkp_OBJECTS)
#gpgkeys_hkp_DEPENDENCIES = ../util/libcompat.a
gpgkeys_hkp_DEPENDENCIES = ../util/libutil.a \
	$(am__DEPENDENCIES_2)
am_gpgkeys_ldap_OBJECTS = gpgkeys_ldap-gpgkeys_ldap.$(OBJEXT) \
	gpgkeys_ldap-ksutil.$(OBJEXT) gpgkeys_ldap-ksmalloc.$(OBJEXT)
gpgkeys_ldap_OBJECTS = $(am_gpgkeys_ldap_OBJECTS)
gpgkeys_ldap_DEPENDENCIES = ../util/libcompat.a $(am__DEPENDENCIES_2)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(gpglibexec_SCRIPTS) $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/scripts/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(gpgkeys_curl_SOURCES) $(gpgkeys_finger_SOURCES) \
	$(gpgkeys_hkp_SOURCES) $(gpgkeys_ldap_SOURCES)
DIST_SOURCES = $(am__gpgkeys_curl_SOURCES_DIST) \
	$(gpgkeys_finger_SOURCES) $(am__gpgkeys_hkp_SOURCES_DIST) \
	$(gpgkeys_ldap_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/missing --run aclocal-1.11
ALLOCA = 
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/missing --run autoconf
AUTOHEADER = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/missing --run autoheader
AUTOMAKE = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/missing --run automake-1.11
AWK = mawk
BUILD_INCLUDED_LIBINTL = no
CAPLIBS = 
CATOBJEXT = .gmo
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2 -Wall -Wno-pointer-sign
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS = -g -O2 -Wall -Wno-pointer-sign
CFLAG_VISIBILITY = -fvisibility=hidden
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLIBS = -ldl 
DNSLIBS = -lresolv 
DOCBOOK_TO_MAN = no
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GENCAT = gencat
GETOPT = 
GLIBC2 = yes
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GPGKEYS_CURL = gpgkeys_curl
GPGKEYS_FINGER = gpgkeys_finger
GPGKEYS_HKP = gpgkeys_hkp
GPGKEYS_LDAP = 
GPGKEYS_MAILTO = 
GREP = /bin/grep
HAVE_ASPRINTF = 1
HAVE_POSIX_PRINTF = 1
HAVE_SNPRINTF = 1
HAVE_VISIBILITY = 1
HAVE_WPRINTF = 0
IDEA_O = idea-stub.o
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = :
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
INTL_MACOSX_LIBS = 
LDAPLIBS = 
LDAP_CPPFLAGS = 
LDFLAGS = 
LIBCURL = 
LIBCURL_CPPFLAGS = 
LIBICONV = 
LIBINTL = 
LIBMULTITHREAD = -lpthread
LIBOBJS = 
LIBPTH = 
LIBREADLINE = 
LIBS = 
LIBTHREAD = 
LIBUSB = 
LIBUSB_CPPFLAGS = 
LTLIBICONV = 
LTLIBINTL = 
LTLIBMULTITHREAD = -lpthread
LTLIBOBJS = 
LTLIBPTH = 
LTLIBTHREAD = 
MAINT = #
MAKEINFO = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MPI_EXTRA_ASM_OBJS = 
MPI_OPT_FLAGS = 
MPI_SFLAGS = 
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NETLIBS = 
NM = /usr/bin/nm -B
NOEXECSTACK_FLAGS = 
OBJEXT = o
PACKAGE = gnupg
PACKAGE_BUGREPORT = http://bugs.gnupg.org
PACKAGE_NAME = gnupg
PACKAGE_STRING = gnupg 1.4.12
PACKAGE_TARNAME = gnupg
PACKAGE_URL = 
PACKAGE_VERSION = 1.4.12
PATH_SEPARATOR = :
PERL = /usr/bin/perl
POSUB = po
PRI_MACROS_BROKEN = 0
RANLIB = ranlib
SENDMAIL = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TAR = /bin/tar
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 1.4.12
W32LIBS = 
WOE32DLL = no
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
ZLIBS = -lz
_libcurl_config = 
_usb_config = 
abs_builddir = /space/gpg/gnupg-1.4.12/keyserver
abs_srcdir = /space/gpg/gnupg-1.4.12/keyserver
abs_top_builddir = /space/gpg/gnupg-1.4.12
abs_top_srcdir = /space/gpg/gnupg-1.4.12
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /space/gpg/gnupg-1.4.12/scripts/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
INCLUDES = -I$(top_srcdir)/include -I$(top_srcdir)/intl
EXTRA_SCRIPTS = gpgkeys_mailto
gpglibexecdir = $(libexecdir)/gnupg
gpglibexec_PROGRAMS =  gpgkeys_hkp gpgkeys_finger gpgkeys_curl
gpglibexec_SCRIPTS = 
noinst_SCRIPTS = gpgkeys_test
gpgkeys_ldap_SOURCES = gpgkeys_ldap.c ksutil.c ksutil.h ksmalloc.c
gpgkeys_hkp_SOURCES = gpgkeys_hkp.c ksutil.c ksutil.h $(am__append_2) \
	$(am__append_4)
gpgkeys_finger_SOURCES = gpgkeys_finger.c ksutil.c ksutil.h
gpgkeys_curl_SOURCES = gpgkeys_curl.c ksutil.c ksutil.h \
	$(am__append_1) $(am__append_3)
other_libs = $(LIBICONV) $(LIBINTL) $(CAPLIBS)
gpgkeys_ldap_CPPFLAGS =  $(am__append_5)
gpgkeys_ldap_LDADD = ../util/libcompat.a   $(other_libs)  
gpgkeys_finger_LDADD = ../util/libutil.a  $(other_libs)  
#gpgkeys_curl_LDADD = ../util/libcompat.a  
gpgkeys_curl_LDADD = ../util/libutil.a  -lresolv  $(other_libs)  
#gpgkeys_hkp_LDADD = ../util/libcompat.a -lresolv   
gpgkeys_hkp_LDADD = ../util/libutil.a  -lresolv  $(other_libs)  
#gpgkeys_curl_CPPFLAGS = 
#gpgkeys_hkp_CPPFLAGS = 
#gpgkeys_finger_CPPFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu keyserver/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu keyserver/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
gpgkeys_mailto: $(top_builddir)/config.status $(srcdir)/gpgkeys_mailto.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
gpgkeys_test: $(top_builddir)/config.status $(srcdir)/gpgkeys_test.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-gpglibexecPROGRAMS: $(gpglibexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(gpglibexec_PROGRAMS)'; test -n "$(gpglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(gpglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(gpglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(gpglibexecdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(gpglibexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-gpglibexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(gpglibexec_PROGRAMS)'; test -n "$(gpglibexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(gpglibexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(gpglibexecdir)" && rm -f $$files

clean-gpglibexecPROGRAMS:
	-test -z "$(gpglibexec_PROGRAMS)" || rm -f $(gpglibexec_PROGRAMS)

installcheck-gpglibexecPROGRAMS: $(gpglibexec_PROGRAMS)
	bad=0; pid=$$$$; list="$(gpglibexec_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(gpglibexecdir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad
gpgkeys_curl$(EXEEXT): $(gpgkeys_curl_OBJECTS) $(gpgkeys_curl_DEPENDENCIES) $(EXTRA_gpgkeys_curl_DEPENDENCIES) 
	@rm -f gpgkeys_curl$(EXEEXT)
	$(LINK) $(gpgkeys_curl_OBJECTS) $(gpgkeys_curl_LDADD) $(LIBS)
gpgkeys_finger$(EXEEXT): $(gpgkeys_finger_OBJECTS) $(gpgkeys_finger_DEPENDENCIES) $(EXTRA_gpgkeys_finger_DEPENDENCIES) 
	@rm -f gpgkeys_finger$(EXEEXT)
	$(LINK) $(gpgkeys_finger_OBJECTS) $(gpgkeys_finger_LDADD) $(LIBS)
gpgkeys_hkp$(EXEEXT): $(gpgkeys_hkp_OBJECTS) $(gpgkeys_hkp_DEPENDENCIES) $(EXTRA_gpgkeys_hkp_DEPENDENCIES) 
	@rm -f gpgkeys_hkp$(EXEEXT)
	$(LINK) $(gpgkeys_hkp_OBJECTS) $(gpgkeys_hkp_LDADD) $(LIBS)
gpgkeys_ldap$(EXEEXT): $(gpgkeys_ldap_OBJECTS) $(gpgkeys_ldap_DEPENDENCIES) $(EXTRA_gpgkeys_ldap_DEPENDENCIES) 
	@rm -f gpgkeys_ldap$(EXEEXT)
	$(LINK) $(gpgkeys_ldap_OBJECTS) $(gpgkeys_ldap_LDADD) $(LIBS)
install-gpglibexecSCRIPTS: $(gpglibexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(gpglibexec_SCRIPTS)'; test -n "$(gpglibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(gpglibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(gpglibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(gpglibexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(gpglibexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-gpglibexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(gpglibexec_SCRIPTS)'; test -n "$(gpglibexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(gpglibexecdir)'; $(am__uninstall_files_from_dir)

installcheck-gpglibexecSCRIPTS: $(gpglibexec_SCRIPTS)
	bad=0; pid=$$$$; list="$(gpglibexec_SCRIPTS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | sed 's,^.*/,,;$(transform)'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(gpglibexecdir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gpgkeys_curl-curl-shim.Po
include ./$(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Po
include ./$(DEPDIR)/gpgkeys_curl-ksmalloc.Po
include ./$(DEPDIR)/gpgkeys_curl-ksutil.Po
include ./$(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Po
include ./$(DEPDIR)/gpgkeys_finger-ksutil.Po
include ./$(DEPDIR)/gpgkeys_hkp-curl-shim.Po
include ./$(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Po
include ./$(DEPDIR)/gpgkeys_hkp-ksmalloc.Po
include ./$(DEPDIR)/gpgkeys_hkp-ksutil.Po
include ./$(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Po
include ./$(DEPDIR)/gpgkeys_ldap-ksmalloc.Po
include ./$(DEPDIR)/gpgkeys_ldap-ksutil.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

gpgkeys_curl-gpgkeys_curl.o: gpgkeys_curl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-gpgkeys_curl.o -MD -MP -MF $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Tpo -c -o gpgkeys_curl-gpgkeys_curl.o `test -f 'gpgkeys_curl.c' || echo '$(srcdir)/'`gpgkeys_curl.c
	$(am__mv) $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Tpo $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Po
#	source='gpgkeys_curl.c' object='gpgkeys_curl-gpgkeys_curl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-gpgkeys_curl.o `test -f 'gpgkeys_curl.c' || echo '$(srcdir)/'`gpgkeys_curl.c

gpgkeys_curl-gpgkeys_curl.obj: gpgkeys_curl.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-gpgkeys_curl.obj -MD -MP -MF $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Tpo -c -o gpgkeys_curl-gpgkeys_curl.obj `if test -f 'gpgkeys_curl.c'; then $(CYGPATH_W) 'gpgkeys_curl.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_curl.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Tpo $(DEPDIR)/gpgkeys_curl-gpgkeys_curl.Po
#	source='gpgkeys_curl.c' object='gpgkeys_curl-gpgkeys_curl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-gpgkeys_curl.obj `if test -f 'gpgkeys_curl.c'; then $(CYGPATH_W) 'gpgkeys_curl.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_curl.c'; fi`

gpgkeys_curl-ksutil.o: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-ksutil.o -MD -MP -MF $(DEPDIR)/gpgkeys_curl-ksutil.Tpo -c -o gpgkeys_curl-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c
	$(am__mv) $(DEPDIR)/gpgkeys_curl-ksutil.Tpo $(DEPDIR)/gpgkeys_curl-ksutil.Po
#	source='ksutil.c' object='gpgkeys_curl-ksutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c

gpgkeys_curl-ksutil.obj: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-ksutil.obj -MD -MP -MF $(DEPDIR)/gpgkeys_curl-ksutil.Tpo -c -o gpgkeys_curl-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_curl-ksutil.Tpo $(DEPDIR)/gpgkeys_curl-ksutil.Po
#	source='ksutil.c' object='gpgkeys_curl-ksutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`

gpgkeys_curl-curl-shim.o: curl-shim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-curl-shim.o -MD -MP -MF $(DEPDIR)/gpgkeys_curl-curl-shim.Tpo -c -o gpgkeys_curl-curl-shim.o `test -f 'curl-shim.c' || echo '$(srcdir)/'`curl-shim.c
	$(am__mv) $(DEPDIR)/gpgkeys_curl-curl-shim.Tpo $(DEPDIR)/gpgkeys_curl-curl-shim.Po
#	source='curl-shim.c' object='gpgkeys_curl-curl-shim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-curl-shim.o `test -f 'curl-shim.c' || echo '$(srcdir)/'`curl-shim.c

gpgkeys_curl-curl-shim.obj: curl-shim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-curl-shim.obj -MD -MP -MF $(DEPDIR)/gpgkeys_curl-curl-shim.Tpo -c -o gpgkeys_curl-curl-shim.obj `if test -f 'curl-shim.c'; then $(CYGPATH_W) 'curl-shim.c'; else $(CYGPATH_W) '$(srcdir)/curl-shim.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_curl-curl-shim.Tpo $(DEPDIR)/gpgkeys_curl-curl-shim.Po
#	source='curl-shim.c' object='gpgkeys_curl-curl-shim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-curl-shim.obj `if test -f 'curl-shim.c'; then $(CYGPATH_W) 'curl-shim.c'; else $(CYGPATH_W) '$(srcdir)/curl-shim.c'; fi`

gpgkeys_curl-ksmalloc.o: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-ksmalloc.o -MD -MP -MF $(DEPDIR)/gpgkeys_curl-ksmalloc.Tpo -c -o gpgkeys_curl-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c
	$(am__mv) $(DEPDIR)/gpgkeys_curl-ksmalloc.Tpo $(DEPDIR)/gpgkeys_curl-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_curl-ksmalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c

gpgkeys_curl-ksmalloc.obj: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_curl-ksmalloc.obj -MD -MP -MF $(DEPDIR)/gpgkeys_curl-ksmalloc.Tpo -c -o gpgkeys_curl-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_curl-ksmalloc.Tpo $(DEPDIR)/gpgkeys_curl-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_curl-ksmalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_curl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_curl-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`

gpgkeys_finger-gpgkeys_finger.o: gpgkeys_finger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_finger-gpgkeys_finger.o -MD -MP -MF $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Tpo -c -o gpgkeys_finger-gpgkeys_finger.o `test -f 'gpgkeys_finger.c' || echo '$(srcdir)/'`gpgkeys_finger.c
	$(am__mv) $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Tpo $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Po
#	source='gpgkeys_finger.c' object='gpgkeys_finger-gpgkeys_finger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_finger-gpgkeys_finger.o `test -f 'gpgkeys_finger.c' || echo '$(srcdir)/'`gpgkeys_finger.c

gpgkeys_finger-gpgkeys_finger.obj: gpgkeys_finger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_finger-gpgkeys_finger.obj -MD -MP -MF $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Tpo -c -o gpgkeys_finger-gpgkeys_finger.obj `if test -f 'gpgkeys_finger.c'; then $(CYGPATH_W) 'gpgkeys_finger.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_finger.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Tpo $(DEPDIR)/gpgkeys_finger-gpgkeys_finger.Po
#	source='gpgkeys_finger.c' object='gpgkeys_finger-gpgkeys_finger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_finger-gpgkeys_finger.obj `if test -f 'gpgkeys_finger.c'; then $(CYGPATH_W) 'gpgkeys_finger.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_finger.c'; fi`

gpgkeys_finger-ksutil.o: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_finger-ksutil.o -MD -MP -MF $(DEPDIR)/gpgkeys_finger-ksutil.Tpo -c -o gpgkeys_finger-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c
	$(am__mv) $(DEPDIR)/gpgkeys_finger-ksutil.Tpo $(DEPDIR)/gpgkeys_finger-ksutil.Po
#	source='ksutil.c' object='gpgkeys_finger-ksutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_finger-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c

gpgkeys_finger-ksutil.obj: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_finger-ksutil.obj -MD -MP -MF $(DEPDIR)/gpgkeys_finger-ksutil.Tpo -c -o gpgkeys_finger-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_finger-ksutil.Tpo $(DEPDIR)/gpgkeys_finger-ksutil.Po
#	source='ksutil.c' object='gpgkeys_finger-ksutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_finger_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_finger-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`

gpgkeys_hkp-gpgkeys_hkp.o: gpgkeys_hkp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-gpgkeys_hkp.o -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Tpo -c -o gpgkeys_hkp-gpgkeys_hkp.o `test -f 'gpgkeys_hkp.c' || echo '$(srcdir)/'`gpgkeys_hkp.c
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Tpo $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Po
#	source='gpgkeys_hkp.c' object='gpgkeys_hkp-gpgkeys_hkp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-gpgkeys_hkp.o `test -f 'gpgkeys_hkp.c' || echo '$(srcdir)/'`gpgkeys_hkp.c

gpgkeys_hkp-gpgkeys_hkp.obj: gpgkeys_hkp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-gpgkeys_hkp.obj -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Tpo -c -o gpgkeys_hkp-gpgkeys_hkp.obj `if test -f 'gpgkeys_hkp.c'; then $(CYGPATH_W) 'gpgkeys_hkp.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_hkp.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Tpo $(DEPDIR)/gpgkeys_hkp-gpgkeys_hkp.Po
#	source='gpgkeys_hkp.c' object='gpgkeys_hkp-gpgkeys_hkp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-gpgkeys_hkp.obj `if test -f 'gpgkeys_hkp.c'; then $(CYGPATH_W) 'gpgkeys_hkp.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_hkp.c'; fi`

gpgkeys_hkp-ksutil.o: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-ksutil.o -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-ksutil.Tpo -c -o gpgkeys_hkp-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-ksutil.Tpo $(DEPDIR)/gpgkeys_hkp-ksutil.Po
#	source='ksutil.c' object='gpgkeys_hkp-ksutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c

gpgkeys_hkp-ksutil.obj: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-ksutil.obj -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-ksutil.Tpo -c -o gpgkeys_hkp-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-ksutil.Tpo $(DEPDIR)/gpgkeys_hkp-ksutil.Po
#	source='ksutil.c' object='gpgkeys_hkp-ksutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`

gpgkeys_hkp-curl-shim.o: curl-shim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-curl-shim.o -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-curl-shim.Tpo -c -o gpgkeys_hkp-curl-shim.o `test -f 'curl-shim.c' || echo '$(srcdir)/'`curl-shim.c
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-curl-shim.Tpo $(DEPDIR)/gpgkeys_hkp-curl-shim.Po
#	source='curl-shim.c' object='gpgkeys_hkp-curl-shim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-curl-shim.o `test -f 'curl-shim.c' || echo '$(srcdir)/'`curl-shim.c

gpgkeys_hkp-curl-shim.obj: curl-shim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-curl-shim.obj -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-curl-shim.Tpo -c -o gpgkeys_hkp-curl-shim.obj `if test -f 'curl-shim.c'; then $(CYGPATH_W) 'curl-shim.c'; else $(CYGPATH_W) '$(srcdir)/curl-shim.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-curl-shim.Tpo $(DEPDIR)/gpgkeys_hkp-curl-shim.Po
#	source='curl-shim.c' object='gpgkeys_hkp-curl-shim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-curl-shim.obj `if test -f 'curl-shim.c'; then $(CYGPATH_W) 'curl-shim.c'; else $(CYGPATH_W) '$(srcdir)/curl-shim.c'; fi`

gpgkeys_hkp-ksmalloc.o: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-ksmalloc.o -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-ksmalloc.Tpo -c -o gpgkeys_hkp-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-ksmalloc.Tpo $(DEPDIR)/gpgkeys_hkp-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_hkp-ksmalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c

gpgkeys_hkp-ksmalloc.obj: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_hkp-ksmalloc.obj -MD -MP -MF $(DEPDIR)/gpgkeys_hkp-ksmalloc.Tpo -c -o gpgkeys_hkp-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_hkp-ksmalloc.Tpo $(DEPDIR)/gpgkeys_hkp-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_hkp-ksmalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_hkp_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_hkp-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`

gpgkeys_ldap-gpgkeys_ldap.o: gpgkeys_ldap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-gpgkeys_ldap.o -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Tpo -c -o gpgkeys_ldap-gpgkeys_ldap.o `test -f 'gpgkeys_ldap.c' || echo '$(srcdir)/'`gpgkeys_ldap.c
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Tpo $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Po
#	source='gpgkeys_ldap.c' object='gpgkeys_ldap-gpgkeys_ldap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-gpgkeys_ldap.o `test -f 'gpgkeys_ldap.c' || echo '$(srcdir)/'`gpgkeys_ldap.c

gpgkeys_ldap-gpgkeys_ldap.obj: gpgkeys_ldap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-gpgkeys_ldap.obj -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Tpo -c -o gpgkeys_ldap-gpgkeys_ldap.obj `if test -f 'gpgkeys_ldap.c'; then $(CYGPATH_W) 'gpgkeys_ldap.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_ldap.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Tpo $(DEPDIR)/gpgkeys_ldap-gpgkeys_ldap.Po
#	source='gpgkeys_ldap.c' object='gpgkeys_ldap-gpgkeys_ldap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-gpgkeys_ldap.obj `if test -f 'gpgkeys_ldap.c'; then $(CYGPATH_W) 'gpgkeys_ldap.c'; else $(CYGPATH_W) '$(srcdir)/gpgkeys_ldap.c'; fi`

gpgkeys_ldap-ksutil.o: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-ksutil.o -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-ksutil.Tpo -c -o gpgkeys_ldap-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-ksutil.Tpo $(DEPDIR)/gpgkeys_ldap-ksutil.Po
#	source='ksutil.c' object='gpgkeys_ldap-ksutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-ksutil.o `test -f 'ksutil.c' || echo '$(srcdir)/'`ksutil.c

gpgkeys_ldap-ksutil.obj: ksutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-ksutil.obj -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-ksutil.Tpo -c -o gpgkeys_ldap-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-ksutil.Tpo $(DEPDIR)/gpgkeys_ldap-ksutil.Po
#	source='ksutil.c' object='gpgkeys_ldap-ksutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-ksutil.obj `if test -f 'ksutil.c'; then $(CYGPATH_W) 'ksutil.c'; else $(CYGPATH_W) '$(srcdir)/ksutil.c'; fi`

gpgkeys_ldap-ksmalloc.o: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-ksmalloc.o -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-ksmalloc.Tpo -c -o gpgkeys_ldap-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-ksmalloc.Tpo $(DEPDIR)/gpgkeys_ldap-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_ldap-ksmalloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-ksmalloc.o `test -f 'ksmalloc.c' || echo '$(srcdir)/'`ksmalloc.c

gpgkeys_ldap-ksmalloc.obj: ksmalloc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gpgkeys_ldap-ksmalloc.obj -MD -MP -MF $(DEPDIR)/gpgkeys_ldap-ksmalloc.Tpo -c -o gpgkeys_ldap-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`
	$(am__mv) $(DEPDIR)/gpgkeys_ldap-ksmalloc.Tpo $(DEPDIR)/gpgkeys_ldap-ksmalloc.Po
#	source='ksmalloc.c' object='gpgkeys_ldap-ksmalloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gpgkeys_ldap_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gpgkeys_ldap-ksmalloc.obj `if test -f 'ksmalloc.c'; then $(CYGPATH_W) 'ksmalloc.c'; else $(CYGPATH_W) '$(srcdir)/ksmalloc.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(gpglibexecdir)" "$(DESTDIR)$(gpglibexecdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-gpglibexecPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-gpglibexecPROGRAMS install-gpglibexecSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-gpglibexecPROGRAMS \
	installcheck-gpglibexecSCRIPTS

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-gpglibexecPROGRAMS uninstall-gpglibexecSCRIPTS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-gpglibexecPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-gpglibexecPROGRAMS \
	install-gpglibexecSCRIPTS install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installcheck-gpglibexecPROGRAMS \
	installcheck-gpglibexecSCRIPTS installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-gpglibexecPROGRAMS \
	uninstall-gpglibexecSCRIPTS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
